#!/bin/sh
#
# Copyright (C) 2012  Etersoft
# Copyright (C) 2012  Vitaly Lipatov <lav@etersoft.ru>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#

__epm_search_output()
{
local CMD
local string="$1"
case $PMTYPE in
	apt-rpm|apt-dpkg)
		CMD="apt-cache search"
		;;
	urpm-rpm)
		CMD="urpmq -y"
		;;
	pkgsrc)
		CMD="pkg_info -x"
		;;
	emerge)
		CMD="emerge --search"
		;;
	pacman)
		CMD="pacman -Ss"
		;;
	aura)
		CMD="aura -As"
		;;
	yum-rpm)
		CMD="yum search"
		;;
	dnf-rpm)
		CMD="dnf search"
		;;
	zypper-rpm)
		CMD="zypper search"
		;;
	mpkg)
		CMD="mpkg search"
		;;
	npackd)
		docmd npackdcl search --query="$string" --status=all
		return
		;;
	chocolatey)
		CMD="chocolatey list"
		;;
	slackpkg)
		# FIXME
		echo "FIXME: need case insensitive search"
		docmd_foreach "/usr/sbin/slackpkg search" $string
		return
		;;
	homebrew)
		CMD="brew search"
		;;
	*)
		fatal "Have no suitable search command for $PMTYPE"
		;;
esac

docmd $CMD $string
}

# produce grep sequence
__epm_search_make_grep()
{
	local i
	local string="$1"
	shift
	echo -n "\"$string\""
	for i in $@ ; do
		local NOR=${i/^/}
		if [ "$NOR" = "$i" ] ; then
			echo -n " | grep -- \"$i\""
		else
			echo -n " | grep -v -- \"$NOR\""
		fi
	done
}

# copied from korinf/tools/run-script/scripts/search

epm_search()
{
	[ -n "$pkg_filenames" ] || fatal "Run search without any string"
	# FIXME: do it better
	eval "__epm_search_output $(eval __epm_search_make_grep $quoted_args)"
}
